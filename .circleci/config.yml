version: 2

references:

  container_config: &container_config
    working_directory: ~/project/cmdb.js
    docker:
      - image: circleci/node:8.10.0

  workspace_root: &workspace_root
    "~/project"

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  npm_cache_key: &npm_cache_key
    v1-dependency-npm-{{ checksum "package-lock.json" }}

  restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - *npm_cache_key

  cache_node_modules: &cache_node_modules
    save_cache:
      key: *npm_cache_key
      paths:
        - ./node_modules/

jobs:
  checkout:
    <<: *container_config
    steps:
      - checkout
      - *restore_node_modules

      - run:
          name: Install dependencies
          command: npm install

      - *cache_node_modules

      - persist_to_workspace:
          root: ~/project
          paths:
            - cmdb.js

  test:
    <<: *container_config
    steps:
      - *attach_workspace

      - run:
          name: Run linter
          command: npm run lint

      - run:
          name: Run tests
          command: npm run test:coverage -- --ci && npm run test:coverage:submit

      - store_artifacts:
          path: coverage
          destination: /coverage

      - run:
          name: Build
          command: npm run build

      # Required for pupeteer on docker based CI
      # https://github.com/GoogleChrome/puppeteer/issues/290
      - run:
          name: Prep distributable tests
          command: |
            apt-get update && \
            apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 \
            libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 \
            libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 \
            libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 \
            libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 \
            libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget

      - run:
          name: Run distributable tests
          command: npm run test:dist -- --ci

  release:
    <<: *container_config
    steps:
      - *attach_workspace

      - deploy:
          command: |
            echo "_auth = $NPM_AUTH" >> .npmrc
            echo "email = $NPM_EMAIL" >> .npmrc
            npm publish --access public

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - checkout
      - test:
          requires:
            - checkout
      - release:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/

experimental:
  notify:
    branches:
      only:
        - master
